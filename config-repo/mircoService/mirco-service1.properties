#spring.profiles=mirco-service1
#服务注册中心地址，需按照注册中心IP进行对应修改
eureka.client.serviceUrl.defaultZone=http://register-center1:8761/eureka/
spring.application.name=mirco-service
#当前服务端口
server.port=7011



#数据库链接信息
spring.datasource.url = jdbc:mysql://192.168.146.28:50080/test?useUnicode=true&characterEncoding=utf-8
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.username = root
spring.datasource.password = 123456
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#mybatis
#mybatis自身的一些配置，例如基本类型的别名
mybatis.config-location=classpath:mybatis/mybatis-config.xml
#指定mapper文件夹的位置
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

#redis配置
#Redis服务器地址
spring.redis.host=127.0.0.1
#Redis服务器连接端口
spring.redis.port=6379
#Redis数据库索引（默认为0）
spring.redis.database=0  
#连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=50
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=3000
#连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=20
#连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=2
#连接超时时间（毫秒）
spring.redis.timeout=5000

#缓存
#spring.cache.cache-names=book1,book2
spring.cache.type=REDIS


##kafka
##配置通道绑定参数,配置自定义的通道与哪个中间件交互。在本例中自定义MsgChannel消息通道
#目标主题
spring.cloud.stream.bindings.msg_input.destination=test-topic
spring.cloud.stream.bindings.msg_output.destination=test-topic
#指定默认的binder为kafka
spring.cloud.stream.default-binder=kafka

##spring-kafka的外部化配置
#kafka服务地址
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=consumer1
spring.kafka.producer.client-id=producer1
#指定producer的序列化类为ByteArraySerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer